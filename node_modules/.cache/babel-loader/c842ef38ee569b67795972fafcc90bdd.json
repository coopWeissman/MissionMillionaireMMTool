{"ast":null,"code":"import _objectSpread from \"/Users/cooper/Documents/GitHub/Dash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"/Users/cooper/Documents/GitHub/Dash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/cooper/Documents/GitHub/Dash/src/components/CustomInput/CustomInput.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\"; // @material-ui/icons\n\nimport Clear from \"@material-ui/icons/Clear\";\nimport Check from \"@material-ui/icons/Check\"; // core components\n\nimport styles from \"assets/jss/material-dashboard-react/components/customInputStyle.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\nexport default function CustomInput(props) {\n  _s();\n\n  var _classNames, _classNames2;\n\n  var classes = useStyles();\n  var formControlProps = props.formControlProps,\n      onChange = props.onChange,\n      labelText = props.labelText,\n      id = props.id,\n      labelProps = props.labelProps,\n      inputProps = props.inputProps,\n      error = props.error,\n      success = props.success,\n      rtlActive = props.rtlActive;\n  var labelClasses = classNames((_classNames = {}, _defineProperty(_classNames, \" \" + classes.labelRootError, error), _defineProperty(_classNames, \" \" + classes.labelRootSuccess, success && !error), _defineProperty(_classNames, \" \" + classes.labelRTL, rtlActive), _classNames));\n  var underlineClasses = classNames((_classNames2 = {}, _defineProperty(_classNames2, classes.underlineError, error), _defineProperty(_classNames2, classes.underlineSuccess, success && !error), _defineProperty(_classNames2, classes.underline, true), _classNames2));\n  var marginTop = classNames(_defineProperty({}, classes.marginTop, labelText === undefined));\n  var newInputProps = {\n    maxLength: inputProps && inputProps.maxLength ? inputProps.maxLength : undefined,\n    minLength: inputProps && inputProps.minLength ? inputProps.minLength : undefined,\n    step: inputProps && inputProps.step ? inputProps.step : undefined\n  };\n  return /*#__PURE__*/_jsxDEV(FormControl, _objectSpread(_objectSpread({}, formControlProps), {}, {\n    className: formControlProps.className + \" \" + classes.formControl,\n    children: [labelText !== undefined ? /*#__PURE__*/_jsxDEV(InputLabel, _objectSpread(_objectSpread({\n      className: classes.labelRoot + labelClasses,\n      htmlFor: id\n    }, labelProps), {}, {\n      children: labelText\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(Input, _objectSpread(_objectSpread({\n      classes: {\n        root: marginTop,\n        disabled: classes.disabled,\n        underline: underlineClasses\n      },\n      change: onChange,\n      id: id\n    }, inputProps), {}, {\n      inputProps: newInputProps\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(Clear, {\n      className: classes.feedback + \" \" + classes.labelRootError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : success ? /*#__PURE__*/_jsxDEV(Check, {\n      className: classes.feedback + \" \" + classes.labelRootSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : null]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CustomInput, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = CustomInput;\nCustomInput.propTypes = {\n  labelText: PropTypes.node,\n  onChange: PropTypes.object,\n  labelProps: PropTypes.object,\n  id: PropTypes.string,\n  inputProps: PropTypes.object,\n  formControlProps: PropTypes.object,\n  error: PropTypes.bool,\n  success: PropTypes.bool,\n  rtlActive: PropTypes.bool\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomInput\");","map":{"version":3,"sources":["/Users/cooper/Documents/GitHub/Dash/src/components/CustomInput/CustomInput.js"],"names":["React","classNames","PropTypes","makeStyles","FormControl","InputLabel","Input","Clear","Check","styles","useStyles","CustomInput","props","classes","formControlProps","onChange","labelText","id","labelProps","inputProps","error","success","rtlActive","labelClasses","labelRootError","labelRootSuccess","labelRTL","underlineClasses","underlineError","underlineSuccess","underline","marginTop","undefined","newInputProps","maxLength","minLength","step","className","formControl","labelRoot","root","disabled","feedback","propTypes","node","object","string","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\n// @material-ui/icons\nimport Clear from \"@material-ui/icons/Clear\";\nimport Check from \"@material-ui/icons/Check\";\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/customInputStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CustomInput(props) {\n  const classes = useStyles();\n  const {\n    formControlProps,\n    onChange,\n    labelText,\n    id,\n    labelProps,\n    inputProps,\n    error,\n    success,\n    rtlActive,\n  } = props;\n\n  const labelClasses = classNames({\n    [\" \" + classes.labelRootError]: error,\n    [\" \" + classes.labelRootSuccess]: success && !error,\n    [\" \" + classes.labelRTL]: rtlActive,\n  });\n  const underlineClasses = classNames({\n    [classes.underlineError]: error,\n    [classes.underlineSuccess]: success && !error,\n    [classes.underline]: true,\n  });\n  const marginTop = classNames({\n    [classes.marginTop]: labelText === undefined,\n  });\n  let newInputProps = {\n    maxLength:\n      inputProps && inputProps.maxLength ? inputProps.maxLength : undefined,\n    minLength:\n      inputProps && inputProps.minLength ? inputProps.minLength : undefined,\n    step: inputProps && inputProps.step ? inputProps.step : undefined,\n  };\n  return (\n    <FormControl\n      {...formControlProps}\n      className={formControlProps.className + \" \" + classes.formControl}\n    >\n      {labelText !== undefined ? (\n        <InputLabel\n          className={classes.labelRoot + labelClasses}\n          htmlFor={id}\n          {...labelProps}\n        >\n          {labelText}\n        </InputLabel>\n      ) : null}\n      <Input\n        classes={{\n          root: marginTop,\n          disabled: classes.disabled,\n          underline: underlineClasses,\n        }}\n        change= {onChange}\n        id={id}\n        {...inputProps}\n        inputProps={newInputProps}\n      />\n      {error ? (\n        <Clear className={classes.feedback + \" \" + classes.labelRootError} />\n      ) : success ? (\n        <Check className={classes.feedback + \" \" + classes.labelRootSuccess} />\n      ) : null}\n    </FormControl>\n  );\n}\n\nCustomInput.propTypes = {\n  labelText: PropTypes.node,\n  onChange: PropTypes.object,\n  labelProps: PropTypes.object,\n  id: PropTypes.string,\n  inputProps: PropTypes.object,\n  formControlProps: PropTypes.object,\n  error: PropTypes.bool,\n  success: PropTypes.bool,\n  rtlActive: PropTypes.bool,\n};\n"]},"metadata":{},"sourceType":"module"}