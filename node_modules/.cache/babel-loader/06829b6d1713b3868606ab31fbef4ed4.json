{"ast":null,"code":"import _defineProperty from\"/Users/cooperweissman/Documents/GitHub/Dash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"/Users/cooperweissman/Documents/GitHub/Dash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/cooperweissman/Documents/GitHub/Dash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import classnames from\"classnames\";// @material-ui/core components\nimport{makeStyles}from\"@material-ui/core/styles\";import Checkbox from\"@material-ui/core/Checkbox\";import Tooltip from\"@material-ui/core/Tooltip\";import IconButton from\"@material-ui/core/IconButton\";import Table from\"@material-ui/core/Table\";import TableRow from\"@material-ui/core/TableRow\";import TableBody from\"@material-ui/core/TableBody\";import TableCell from\"@material-ui/core/TableCell\";// @material-ui/icons\nimport Edit from\"@material-ui/icons/Edit\";import Close from\"@material-ui/icons/Close\";import Check from\"@material-ui/icons/Check\";// core components\nimport styles from\"assets/jss/material-dashboard-react/components/tasksStyle.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(styles);export default function Tasks(props){var classes=useStyles();var _React$useState=React.useState(_toConsumableArray(props.checkedIndexes)),_React$useState2=_slicedToArray(_React$useState,2),checked=_React$useState2[0],setChecked=_React$useState2[1];var handleToggle=function handleToggle(value){var currentIndex=checked.indexOf(value);var newChecked=_toConsumableArray(checked);if(currentIndex===-1){newChecked.push(value);}else{newChecked.splice(currentIndex,1);}setChecked(newChecked);};var tasksIndexes=props.tasksIndexes,tasks=props.tasks,rtlActive=props.rtlActive;var tableCellClasses=classnames(classes.tableCell,_defineProperty({},classes.tableCellRTL,rtlActive));return/*#__PURE__*/_jsx(Table,{className:classes.table,children:/*#__PURE__*/_jsx(TableBody,{children:tasksIndexes.map(function(value){return/*#__PURE__*/_jsxs(TableRow,{className:classes.tableRow,children:[/*#__PURE__*/_jsx(TableCell,{className:tableCellClasses,children:/*#__PURE__*/_jsx(Checkbox,{checked:checked.indexOf(value)!==-1,tabIndex:-1,onClick:function onClick(){return handleToggle(value);},checkedIcon:/*#__PURE__*/_jsx(Check,{className:classes.checkedIcon}),icon:/*#__PURE__*/_jsx(Check,{className:classes.uncheckedIcon}),classes:{checked:classes.checked,root:classes.root}})}),/*#__PURE__*/_jsx(TableCell,{className:tableCellClasses,children:tasks[value]}),/*#__PURE__*/_jsxs(TableCell,{className:classes.tableActions,children:[/*#__PURE__*/_jsx(Tooltip,{id:\"tooltip-top\",title:\"Edit Task\",placement:\"top\",classes:{tooltip:classes.tooltip},children:/*#__PURE__*/_jsx(IconButton,{\"aria-label\":\"Edit\",className:classes.tableActionButton,children:/*#__PURE__*/_jsx(Edit,{className:classes.tableActionButtonIcon+\" \"+classes.edit})})}),/*#__PURE__*/_jsx(Tooltip,{id:\"tooltip-top-start\",title:\"Remove\",placement:\"top\",classes:{tooltip:classes.tooltip},children:/*#__PURE__*/_jsx(IconButton,{\"aria-label\":\"Close\",className:classes.tableActionButton,children:/*#__PURE__*/_jsx(Close,{className:classes.tableActionButtonIcon+\" \"+classes.close})})})]})]},value);})})});}","map":{"version":3,"sources":["/Users/cooperweissman/Documents/GitHub/Dash/src/components/Tasks/Tasks.js"],"names":["React","classnames","makeStyles","Checkbox","Tooltip","IconButton","Table","TableRow","TableBody","TableCell","Edit","Close","Check","styles","useStyles","Tasks","props","classes","useState","checkedIndexes","checked","setChecked","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","tasksIndexes","tasks","rtlActive","tableCellClasses","tableCell","tableCellRTL","table","map","tableRow","checkedIcon","uncheckedIcon","root","tableActions","tooltip","tableActionButton","tableActionButtonIcon","edit","close"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\n// @material-ui/icons\nimport Edit from \"@material-ui/icons/Edit\";\nimport Close from \"@material-ui/icons/Close\";\nimport Check from \"@material-ui/icons/Check\";\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/tasksStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Tasks(props) {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([...props.checkedIndexes]);\n  const handleToggle = (value) => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    setChecked(newChecked);\n  };\n  const { tasksIndexes, tasks, rtlActive } = props;\n  const tableCellClasses = classnames(classes.tableCell, {\n    [classes.tableCellRTL]: rtlActive,\n  });\n  return (\n    <Table className={classes.table}>\n      <TableBody>\n        {tasksIndexes.map((value) => (\n          <TableRow key={value} className={classes.tableRow}>\n            <TableCell className={tableCellClasses}>\n              <Checkbox\n                checked={checked.indexOf(value) !== -1}\n                tabIndex={-1}\n                onClick={() => handleToggle(value)}\n                checkedIcon={<Check className={classes.checkedIcon} />}\n                icon={<Check className={classes.uncheckedIcon} />}\n                classes={{\n                  checked: classes.checked,\n                  root: classes.root,\n                }}\n              />\n            </TableCell>\n            <TableCell className={tableCellClasses}>{tasks[value]}</TableCell>\n            <TableCell className={classes.tableActions}>\n              <Tooltip\n                id=\"tooltip-top\"\n                title=\"Edit Task\"\n                placement=\"top\"\n                classes={{ tooltip: classes.tooltip }}\n              >\n                <IconButton\n                  aria-label=\"Edit\"\n                  className={classes.tableActionButton}\n                >\n                  <Edit\n                    className={\n                      classes.tableActionButtonIcon + \" \" + classes.edit\n                    }\n                  />\n                </IconButton>\n              </Tooltip>\n              <Tooltip\n                id=\"tooltip-top-start\"\n                title=\"Remove\"\n                placement=\"top\"\n                classes={{ tooltip: classes.tooltip }}\n              >\n                <IconButton\n                  aria-label=\"Close\"\n                  className={classes.tableActionButton}\n                >\n                  <Close\n                    className={\n                      classes.tableActionButtonIcon + \" \" + classes.close\n                    }\n                  />\n                </IconButton>\n              </Tooltip>\n            </TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n}\n\nTasks.propTypes = {\n  tasksIndexes: PropTypes.arrayOf(PropTypes.number),\n  tasks: PropTypes.arrayOf(PropTypes.node),\n  rtlActive: PropTypes.bool,\n  checkedIndexes: PropTypes.array,\n};\n"]},"metadata":{},"sourceType":"module"}