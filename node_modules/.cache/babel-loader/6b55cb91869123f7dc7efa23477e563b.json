{"ast":null,"code":"import _slicedToArray from \"/Users/cooper/Documents/GitHub/Dash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/cooper/Documents/GitHub/Dash/src/views/UserProfile/Chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport { BarChart, Legend, Bar, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chart(props) {\n  _s();\n\n  var interest = props.interest; // const [years, setYears] = useState(50);\n\n  var age = props.age;\n  var retirement = props.retirement;\n  var years = retirement - age;\n  var savings = props.savings;\n  var amount = props.amount;\n  var _final = props.contributions;\n  var time = \"0\";\n\n  var _useState = useState(3),\n      _useState2 = _slicedToArray(_useState, 2),\n      id = _useState2[0],\n      setId = _useState2[1];\n\n  var data = [];\n\n  for (var i = 0; i < years; i = i + 1) {\n    age = 2021 + i;\n    savings = Number(savings); // interest = Number(interest)\n\n    for (var x = 0; x < 12; x = x + 1) {\n      retirement = (savings + _final) * (1 + interest / 12);\n      savings = retirement;\n    }\n\n    savings = savings; // result = (interest/12*(amount-savings*(1+interest/12)**((retirement-age)*12)))/((1+interest/12)**((retirement-age)*12)-1)\n    // savings= savings*(1.008333)**12*years\n\n    data.push({\n      \"name\": age,\n      \"id\": id + i,\n      \"uv\": 1.1,\n      \"Amount\": savings\n    });\n    console.log(data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100px\",\n      height: \"100px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(BarChart, {\n      width: 1460 * 1.5,\n      height: 500 * 1.5,\n      data: data,\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"Amount\",\n        fill: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chart, \"iavGW2EPcaT9iANiTYqW3IIDepM=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/cooper/Documents/GitHub/Dash/src/views/UserProfile/Chart.js"],"names":["React","useState","useTheme","Button","BarChart","Legend","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Chart","props","interest","age","retirement","years","savings","amount","final","contributions","time","id","setId","data","i","Number","x","push","console","log","width","height"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,GAA3B,EAAgCC,KAAhC,EAAuCC,KAAvC,EAA8CC,aAA9C,EAA6DC,OAA7D,QAA4E,UAA5E;;;AAGA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAClB,MAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAvB,CADkB,CAElB;;AACA,MAAIC,GAAG,GAAGF,KAAK,CAACE,GAAhB;AACA,MAAIC,UAAU,GAAEH,KAAK,CAACG,UAAtB;AACA,MAAIC,KAAK,GAAGD,UAAU,GAACD,GAAvB;AACA,MAAIG,OAAO,GAAGL,KAAK,CAACK,OAApB;AACA,MAAIC,MAAM,GAAGN,KAAK,CAACM,MAAnB;AACA,MAAIC,MAAK,GAAGP,KAAK,CAACQ,aAAlB;AACA,MAAMC,IAAI,GAAG,GAAb;;AACA,kBAAoBpB,QAAQ,CAAC,CAAD,CAA5B;AAAA;AAAA,MAAOqB,EAAP;AAAA,MAAWC,KAAX;;AACA,MAAMC,IAAI,GAAG,EAAb;;AAIE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,KAApB,EAA2BS,CAAC,GAACA,CAAC,GAAC,CAA/B,EAAiC;AAC/BX,IAAAA,GAAG,GAAI,OAAKW,CAAZ;AACAR,IAAAA,OAAO,GAAGS,MAAM,CAACT,OAAD,CAAhB,CAF+B,CAG/B;;AACA,SAAI,IAAIU,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE,EAAlB,EAAsBA,CAAC,GAACA,CAAC,GAAC,CAA1B,EAA4B;AAC5BZ,MAAAA,UAAU,GAAE,CAACE,OAAO,GAAEE,MAAV,KAAmB,IAAEN,QAAQ,GAAC,EAA9B,CAAZ;AACAI,MAAAA,OAAO,GAAEF,UAAT;AACC;;AAEFE,IAAAA,OAAO,GAAEA,OAAT,CATgC,CAW/B;AACA;;AACFO,IAAAA,IAAI,CAACI,IAAL,CACE;AACE,cAAQd,GADV;AAEE,YAAMQ,EAAE,GAACG,CAFX;AAGE,YAAM,GAHR;AAIE,gBAAUR;AAJZ,KADF;AAQAY,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACD;;AAED,sBACI;AAAK,IAAA,KAAK,EAAE;AAACO,MAAAA,KAAK,EAAE,OAAR;AAAiBC,MAAAA,MAAM,EAAE;AAAzB,KAAZ;AAAA,2BACA,QAAC,QAAD;AAAU,MAAA,KAAK,EAAE,OAAK,GAAtB;AAA2B,MAAA,MAAM,EAAE,MAAI,GAAvC;AAA4C,MAAA,IAAI,EAAER,IAAlD;AAAA,8BACA,QAAC,aAAD;AAAe,QAAA,eAAe,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAHA,eAIA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAJA,eAKA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cALA,eAMA,QAAC,GAAD;AAAK,QAAA,OAAO,EAAC,QAAb;AAAsB,QAAA,IAAI,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cANA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GArDQb,K;;KAAAA,K;AAuDT,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport { BarChart, Legend, Bar, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\n\n\nfunction Chart(props) {\n    const interest = props.interest;\n    // const [years, setYears] = useState(50);\n    var age = props.age;\n    var retirement= props.retirement;\n    var years = retirement-age;\n    var savings = props.savings;\n    var amount = props.amount;\n    var final = props.contributions;\n    const time = \"0\" ; \n    const [id, setId] = useState(3);\n    const data = [\n      \n      ]\n\n      for (var i = 0; i < years; i=i+1){\n        age = (2021+i)\n        savings = Number(savings)\n        // interest = Number(interest)\n        for(var x = 0; x< 12; x=x+1){\n        retirement= (savings+(final))*(1+interest/12)\n        savings= retirement\n        }\n\n       savings= savings\n        \n        // result = (interest/12*(amount-savings*(1+interest/12)**((retirement-age)*12)))/((1+interest/12)**((retirement-age)*12)-1)\n        // savings= savings*(1.008333)**12*years\n      data.push(\n        {\n          \"name\": age,\n          \"id\": id+i,\n          \"uv\": 1.1,\n          \"Amount\": savings,\n        }\n      )\n      console.log(data)\n    }\n    \n    return (\n        <div style={{width: \"100px\", height: \"100px\"}}>\n        <BarChart width={1460*1.5} height={500*1.5} data={data}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip/> \n        <Legend />\n        <Bar dataKey=\"Amount\" fill=\"#8884d8\" />\n        {/* <Bar dataKey=\"uv\" fill=\"#82ca9d\" /> */}\n        </BarChart>\n      </div>\n    \n    )\n}\n\nexport default Chart;\n\n\n  \n                              \n  "]},"metadata":{},"sourceType":"module"}